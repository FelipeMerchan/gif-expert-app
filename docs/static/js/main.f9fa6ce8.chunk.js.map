{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","message","GifItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","catch","error","useFetchGifs","aria-label","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,wEAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnB,kBAYZM,GAZY,kCAcnBO,QAAQC,IAAI,KAAMC,SAdC,0DAAH,sDCEPC,EAAU,SAAC,GAAoB,IAAlBN,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC/B,OACE,sBAAKiB,UAAU,yCAAf,UACE,qBACEA,UAAU,YACVC,IAAKlB,EACLmB,IAAKT,EACLA,MAAOA,IAET,mBAAGO,UAAU,cAAb,SAA4BP,QCNrBU,EAAU,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNgB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACR3B,EAAQC,GACL2B,MAAK,SAAAd,GACJY,EAAS,CACPlB,KAAMM,EACNU,SAAS,OAGZK,MAAMb,QAAQc,SAChB,CAAC7B,IAEGwB,EDb2BM,CAAa9B,GAAjCa,EAFyB,EAE/BN,KAAcgB,EAFiB,EAEjBA,QAEtB,OACE,0BAASQ,aAAW,WAApB,UACE,oBAAIZ,UAAU,oCAAd,SAAmDnB,IAElDuB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SAEIN,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEdVqB,EAAe,WAAO,IAAD,EACI9C,mBAAS,CAAC,kBADd,mBACzB+C,EADyB,KACbhD,EADa,KAGhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEIgD,EAAWxB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MCVnBkC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9fa6ce8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: Proptypes.func.isRequired,\r\n}","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=AmKuUkYEf0q7pWZvDVyvYucQsqb0oWuJ`;\r\n  try {\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      }\r\n    });\r\n    return gifs;\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n}","import React from 'react';\r\n\r\nexport const GifItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img\r\n        className=\"card__img\"\r\n        src={url}\r\n        alt={title}\r\n        title={title}\r\n      />\r\n      <p className=\"card__title\">{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifItem } from './GifItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <section aria-label=\"Gif list\">\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {\r\n          images.map(img => (\r\n            <GifItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(images => {\r\n        setState({\r\n          data: images,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, [category])\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\n\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpertApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './components/GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}